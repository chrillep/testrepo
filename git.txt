Notes:
	- use different branches for different tasks/problems

configure your git global name and email.
	git config --global user.name "Patrik Martin"
	git config --global user.email patrik.martin@mideye.com
	git config --global color.ui true
	git config --global core.editor vim
	
Download a git repo to your local machine. It will download all changes and logs as 
it appears in the original repo.
	git clone https://github.com/puppetlabs/puppet.git
	

git init				#Create a git repository

git add <file>			#Track specific file
git add .				#Track all files in directory
git add -p				#select what staged changes to commit

git log					#See what commits are made
git log --stat 			#shows what files are changed in the commit
git log --graph --all 	#show commits in all branhces as graph
git log <branch> --not <otherbranch>	#display all commits in <branch> that is not merged in to <otherbranch>
git log --stat <branch> --not <otherbranch>	#display status of what is not committed to <otherbranch>
git status				#Display repository status

git blame <filename>	#Display file content and see who and when lines were edited
git blame -C <filename> #as above but who actually wrote the line in the beginning

git remote				#Display remote servers



git commit -m "initial commit" 		#Commit files to repo
git commit -am "add more files"		#Commit files and add untracked files
	
git show				#Display last commit

git diff				#Display changes
git diff <file>			#Display changes in file
git diff --staged		#Display staged data that is ready to be commited

git branch				#List git branches
git branch <name>		#Create git branch from current branch
git branhc -v			#List last commit on all branches
git branch -d <name>	#Delete branch
git branch <name> <nr>	#Create a new branch from old commit

git checkout <branchname>	#change branch (Changes files in working folder)
git checkout -b <newbranch>	#Create and change branch at the same time

gitk 					#Visual display of git branch
gitk --all				#Visual display of all git branches

git merge <branch>		#Merge current branch with other branch


REMOTE SERVER
-------------
User #1
git remote add [options] <name> <url>
git remote add origin git@github.cscottchacon.com:schacon/test.git
git push origin master 	#Push your master branch to origin server

		#git@<serveraddress>:<user>/<repo>.git

User #2
git clone git@github.cscottchacon.com:schacon/test.git
git push origin master	#Pushes the changes to origin even if origin is not configured
git fetch origin		#Fetches the changes from origin to a new origin/master branch
git checkout -b <name> origin/master	#New branch from origin/master

git pull	#Download the master repo on remote server and merge it with your current branch

bisect lets you see what code is faulty
------
git bisect start 	#starts bisect engine
git bisect bad		#current commit is bad
bit bisect good <sha>	#select a commit where evrything worked
git bisect good 	#set the current commit to good and moves on to next
git bisict bad		#set the curront commit to bad and moves on to next
git bisect reset	#goes back to where you were before